[{"C:\\Users\\ed_wa\\gitrepos\\job-ad-parser\\ui\\src\\index.tsx":"1","C:\\Users\\ed_wa\\gitrepos\\job-ad-parser\\ui\\src\\App.tsx":"2","C:\\Users\\ed_wa\\gitrepos\\job-ad-parser\\ui\\src\\JobListing.tsx":"3","C:\\Users\\ed_wa\\gitrepos\\job-ad-parser\\ui\\src\\Example.tsx":"4"},{"size":198,"mtime":1612125888348,"results":"5","hashOfConfig":"6"},{"size":3401,"mtime":1612127141528,"results":"7","hashOfConfig":"6"},{"size":233,"mtime":1610304482748,"results":"8","hashOfConfig":"6"},{"size":667,"mtime":1612125405560,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"yv2um",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ed_wa\\gitrepos\\job-ad-parser\\ui\\src\\index.tsx",[],["21","22"],"C:\\Users\\ed_wa\\gitrepos\\job-ad-parser\\ui\\src\\App.tsx",["23"],"import React, { useEffect, useState } from 'react';\nimport { JobListing } from './JobListing'\nimport { scrapeJobs, IScrapeJobs } from '@ed-graham/scrape-jobs';\n\nfunction App() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [reedJobs, setReedJobs] = useState('');\n\n  // const cvLibraryJobs: IScrapeJobs = {\n  //   url: 'https://www.cv-library.co.uk/solution-architect-technical-lead-developer-jobs-in-cb25-9ft?distance=100&industry=13&salarymin=80000&us=1', //https://www.cv-library.co.uk/solution-architect-technical-lead-developer-jobs-in-cb25-9ft?distance=100&industry=13&salary_annual=8&salary_annual=7&us=1'\n  //   outerSelector: 'li.results__item',\n  //   innerSelector: 'p.job__description'\n  // }\n  \n  // // https://www.cwjobs.co.uk/jobs/solution-architect/in-london?salary=80000&salarytypeid=1&postedwithin=14&radius=30&page=1 - same as jobsite\n  // const jobSiteJobs: IScrapeJobs = {\n  //   url: 'https://www.jobsite.co.uk/jobs/solutions-architect/in-london?salary=80000&salarytypeid=1&postedwithin=14&radius=30&page=1',\n  //   outerSelector: 'div.job',\n  //   innerSelector: 'p.job-intro'\n  // }\n  \n  // https://www.cwjobs.co.uk/jobs/solution-architect/in-london?salary=80000&salarytypeid=1&postedwithin=14&radius=30&page=1 - same as jobsite\n  const reedJobsInput: IScrapeJobs = {\n    url: 'https://www.reed.co.uk/jobs/solution-architect-jobs-in-london?pageno=1&salaryfrom=80000&proximity=50',\n    outerSelector: 'article.job-result',\n    innerSelector: 'div.description p'\n  }\n  \n  // console.log('Making the request to CV Library ...');\n  // let cvLibraryJobsOutput: string = '';\n  // const cvLibraryJobsPromise = scrapeJobs(cvLibraryJobs).then((output: string) => cvLibraryJobsOutput = output);\n\n  // console.log('Making the request to Jobsite ...');\n  // let jobSiteJobsOutput: string = '';\n  // const jobSiteJobsPromise = scrapeJobs(jobSiteJobs).then((output: string) =>  jobSiteJobsOutput = output);\n  \n  // console.log('Making the request to Reed ...');\n  let reedJobsOutput: string = '';\n  // const reedJobsPromise = scrapeJobs(reedJobs).then((output: string) => reedJobsOutput = output);\n\n  // useEffect(() => {\n  //   Promise.all([cvLibraryJobsPromise, jobSiteJobsPromise, reedJobsPromise]).then((values) => {\n  //     console.log('All promises have now been resolved');\n  //     console.log(`cvLibraryJobsOutput: ${cvLibraryJobsOutput.length}`);\n  //     console.log(`jobSiteJobsOutput: ${jobSiteJobsOutput.length}`);\n  //     console.log(`reedJobsOutput: ${reedJobsOutput.length}`);\n  //     [cvLibraryJobsOutput, jobSiteJobsOutput, reedJobsOutput] = values;\n  //   });\n  \n  //   console.log('Got to here ... this SHOULD be the last thing that happens');\n  // });\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    console.log('inside useEffect()');\n    scrapeJobs(reedJobsInput).then((output: string) => {\n      setIsLoaded(true);\n      setReedJobs(output);\n    });\n  })\n\n  console.log('outside useEffect');\n  if (!isLoaded) {\n      console.log('Loading ...');\n      return <div>Loading...</div>;\n  } else {    \n    console.log('Loaded');\n    console.log(`reedJobs: ${reedJobs.length}`);\n    return (\n      <div>\n        <h1>Reed</h1><JobListing htmlFragment={reedJobs} />\n      </div>\n    );\n  }\n\n//  const [cvLibraryJobs, setCvLibraryJobs] = useState();\n}\n\nexport default App;\n","C:\\Users\\ed_wa\\gitrepos\\job-ad-parser\\ui\\src\\JobListing.tsx",[],["24","25"],"C:\\Users\\ed_wa\\gitrepos\\job-ad-parser\\ui\\src\\Example.tsx",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":38,"column":7,"nodeType":"32","messageId":"33","endLine":38,"endColumn":29},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"@typescript-eslint/no-unused-vars","'reedJobsOutput' is assigned a value but never used.","Identifier","unusedVar",["36"],["37"],"no-global-assign","no-unsafe-negation"]